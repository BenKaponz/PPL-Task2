(define bind
    (lambda (v f)
        (if (is-error? v)
            v
            (f v)
        )
    )
)

(define make-error
    (lambda () 'error)
)

(define is-error?
    (lambda (x)
        (eq? x 'error)
    )
)

(define dict
    (lambda (p)
        (if (pair? p)
            p
            (make-error)
        )
    )
)

(define dict?
    (lambda (d)
        (if (eq? d '())
            #t
            (if (pair? d)
                (if (pair? (car d))
                    (if (symbol? (car (car d)))
                        (dict? (cdr d))
                        #f
                    )
                    #f)
                #f)
        )
    )
)

(define get
    (lambda (d key)
        (if (dict? d)
            (if (eq? (car (car d)) key)
                (cdr (car d))
                (if (eq? (cdr d) '())
                    (make-error)
                    (get (cdr d) key)
                )
            )
            (make-error)
        )
    )
)
